<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2006-2012 The Parancoe Team <info@parancoe.org>

    This file is part of Parancoe Plugin Security.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:lambico="http://www.lambico.org/schema/lambico"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.lambico.org/schema/lambico http://www.lambico.org/schema/lambico.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    
    <!-- Authomatic discovering of persistent classes -->
    <lambico:discover-persistent-classes basePackage="org.parancoe.plugins.security"/>
    <!-- Authomatic DAO definition from persistent classes -->
    <lambico:define-daos baseInterfacePackage="org.parancoe.plugins.security" />
    
    <!-- ContextListener specifico per questo plugin -->
    <bean id="pluginSecurityContextListener" class="org.parancoe.plugins.security.PopulateData"/>
    
    <bean id="authenticationManager" class="org.acegisecurity.providers.ProviderManager">
        <property name="providers">
            <list>
                <ref local="daoAuthenticationProvider"/>
                <bean class="org.acegisecurity.providers.anonymous.AnonymousAuthenticationProvider">
                    <property name="key" value="changeThis"/>
                </bean>
                <bean class="org.acegisecurity.providers.rememberme.RememberMeAuthenticationProvider">
                    <property name="key" value="changeThis"/>
                </bean>
            </list>
        </property>
    </bean>
    
    <bean id="daoAuthenticationProvider" class="org.acegisecurity.providers.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService"/>
        <!-- TODO: commented for building after 2.0 merge. Please investigate!
        <property name="userCache">
            <bean class="org.acegisecurity.providers.dao.cache.EhCacheBasedUserCache">
                <property name="cache">
                    <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                        <property name="cacheManager">
                            <bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
                        </property>
                        <property name="cacheName" value="userCache"/>
                    </bean>
                </property>
            </bean>
        </property>
        -->
    </bean>
    
    <bean id="userDetailsService" class="org.acegisecurity.userdetails.jdbc.JdbcDaoImpl">
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
        <property name="usersByUsernameQuery">
            <value>select username, password, enabled FROM psec_user WHERE username = ?</value>
        </property>
        <property name="authoritiesByUsernameQuery">
            <value>select username, role from psec_user u, authority a, user_authority ua 
            where u.username = ? and u.id = ua.user_id and a.id = ua.authority_id</value>
        </property>
    </bean>          
    
    <!-- This bean is optional; it isn't used by any other bean as it only listens and logs -->
    <bean id="loggerListener" class="org.acegisecurity.event.authentication.LoggerListener"/>    
    
    <!--                           -->
    <!-- Configurazione del plugin -->
    <!--                           -->
    <bean id="applicationContextPluginSecurityConfig" class="org.parancoe.web.plugin.ApplicationContextPlugin">
        <property name="name" value="parancoe-plugin-security"/>
        <property name="contextLoaderListeners">
            <list>
                <ref bean="pluginSecurityContextListener"/>
            </list>
        </property>
    </bean>
    
</beans>
