<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:parancoe="http://www.parancoe.org/schema/parancoe"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.parancoe.org/schema/parancoe http://www.parancoe.org/schema/parancoe.xsd">

    
    <!-- ContextListener specifico per questo plugin -->
    <bean id="pluginSecurityContextListener" class="org.parancoe.plugins.security.PopulateData"/>
    
    <bean id="authenticationManager" class="org.springframework.security.providers.ProviderManager">
        <property name="providers">
            <list>
                <ref local="daoAuthenticationProvider"/>
                <bean class="org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider">
                    <property name="key" value="changeThis"/>
                </bean>
                <bean class="org.springframework.security.providers.rememberme.RememberMeAuthenticationProvider">
                    <property name="key" value="changeThis"/>
                </bean>
            </list>
        </property>
    </bean>
    
    <bean id="accessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
        <property name="allowIfAllAbstainDecisions" value="false"/>
        <property name="decisionVoters">
            <list>
                <bean class="org.springframework.security.vote.RoleVoter"/>
                <bean class="org.springframework.security.vote.AuthenticatedVoter"/>
            </list>
        </property>
    </bean>
    
    <bean id="daoAuthenticationProvider" class="org.springframework.security.providers.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService"/>
        <!-- TODO: commented for building after 2.0 merge. Please investigate!        
        <property name="userCache">
            <bean class="org.springframework.security.providers.dao.cache.EhCacheBasedUserCache">
                <property name="cache">
                    <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                        <property name="cacheManager">
                            <bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
                        </property>
                        <property name="cacheName" value="userCache"/>
                    </bean>
                </property>
            </bean>
        </property>
        -->
        <!-- password encoder -->
        <property name="passwordEncoder">
        	<bean class="org.springframework.security.providers.encoding.Md5PasswordEncoder"></bean>        
        </property>
        <property name="saltSource">
        	<bean class="org.springframework.security.providers.dao.salt.ReflectionSaltSource">
        		<property name="userPropertyToUse" value="getUsername"></property>
        	</bean>
        </property>
    </bean>
    
    <bean id="userDetailsService" class="org.springframework.security.userdetails.jdbc.JdbcDaoImpl">
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
        <property name="usersByUsernameQuery">
            <value>select username, password, enabled FROM psec_user WHERE username = ?</value>
        </property>
        <property name="authoritiesByUsernameQuery">
            <value>select username, role from psec_user u, authority a, user_authority ua 
            where u.username = ? and u.id = ua.user_id and a.id = ua.authority_id</value>
        </property>
    </bean>          
    
    <!-- This bean is optional; it isn't used by any other bean as it only listens and logs -->
    <bean id="loggerListener" class="org.springframework.security.event.authentication.LoggerListener"/>    
    
    <!--                           -->
    <!-- Configurazione del plugin -->
    <!--                           -->
    <bean id="applicationContextpluginSecurityConfig" class="org.parancoe.web.plugin.ApplicationContextPlugin">
        <property name="name" value="parancoe-plugin-security-encrypt"/>
        <property name="contextLoaderListeners">
            <list>
                <ref bean="pluginSecurityContextListener"/>
            </list>
        </property>
    </bean>
    
    

    
</beans>
